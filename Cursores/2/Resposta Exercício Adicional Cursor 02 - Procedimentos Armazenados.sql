/* Exercício Adicional Cursor 02 - Procedimentos Armazenados */
use lab_cursor


CREATE TABLE TB_FUNCIONARIO (
  MATRICULA INT NOT NULL PRIMARY KEY,
  NOME VARCHAR(50) NOT NULL
) 

CREATE TABLE TB_DEPENDENTES (
  ID_DEPENDENTE INT NOT NULL IDENTITY(1,1),
  MATRICULA INT NOT NULL REFERENCES TB_FUNCIONARIO(MATRICULA),
  NOME VARCHAR(50) NOT NULL
  PRIMARY KEY (ID_DEPENDENTE, MATRICULA)
)

INSERT INTO TB_FUNCIONARIO VALUES (1, 'JOSÉ RICARDO')
INSERT INTO TB_FUNCIONARIO VALUES (2, 'ANA MILLER')

INSERT INTO TB_DEPENDENTES VALUES (1, 'ROBERTA'),
                                  (1, 'RITA'),
				                  (1, 'GABRIELA')

INSERT INTO TB_DEPENDENTES VALUES (2, 'GUSTAVO'),
                                  (2, 'MARIANA')
                                  
                                  
SELECT * FROM TB_FUNCIONARIO
SELECT * FROM TB_DEPENDENTES


----------------------------------------------------------------
CREATE OR ALTER PROCEDURE SP_RELATORIO_FUNCIONARIO
AS
BEGIN
	
DECLARE @MATRICULA INT, 
        @NOME_FUNCIONARIO VARCHAR(50), 
        @NOME_DEPENDENTE VARCHAR(50)

PRINT '            FUNCIONARIOS E DEPENDENTES'
PRINT ''
PRINT ' MATRICULA	NOME				NOME DEPENDENTE'

DECLARE C_FUNCIONARIO CURSOR FOR 
SELECT MATRICULA, NOME FROM TB_FUNCIONARIO

OPEN C_FUNCIONARIO
FETCH C_FUNCIONARIO INTO @MATRICULA, @NOME_FUNCIONARIO

WHILE (@@FETCH_STATUS = 0) 
  BEGIN
    
	PRINT REPLICATE('-',60)
    PRINT STR(@MATRICULA ,2) +  REPLICATE(CHAR(9),3) + @NOME_FUNCIONARIO 

	-- DEPENDENTES
	DECLARE C_DEPENDENTES CURSOR FOR SELECT NOME FROM TB_DEPENDENTES
	                                 WHERE MATRICULA = @MATRICULA
	OPEN C_DEPENDENTES
	FETCH C_DEPENDENTES INTO @NOME_DEPENDENTE
	WHILE (@@FETCH_STATUS = 0)
	  BEGIN
	     PRINT REPLICATE(' ',32) + @NOME_DEPENDENTE
		 FETCH C_DEPENDENTES INTO @NOME_DEPENDENTE
	  END
	CLOSE C_DEPENDENTES
	DEALLOCATE C_DEPENDENTES
	FETCH C_FUNCIONARIO INTO @MATRICULA, @NOME_FUNCIONARIO
  END

  PRINT REPLICATE('-',60)
CLOSE C_FUNCIONARIO
DEALLOCATE C_FUNCIONARIO
END


EXEC  SP_RELATORIO_FUNCIONARIO

